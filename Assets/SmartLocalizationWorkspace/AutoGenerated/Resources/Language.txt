<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="autumn_description" xml:space="preserve">
		<value>All winter, the sheep will eat the hay, that you mowed in the summer. Over the winter people will make cloth from wool. Some sheep be slaughtered at the beginning of winter for meat.</value>
	</data>
	<data name="autumn_description2" xml:space="preserve">
		<value>Is unsalted fish, dried by cold air and wind on wooden racks (hjell) on the foreshore. 
Dried fish has a storage life of several years.</value>
	</data>
	<data name="autumn_title" xml:space="preserve">
		<value>Sheep are sheared in the autumn</value>
	</data>
	<data name="autumn_title2" xml:space="preserve">
		<value>Stockfish (cod)</value>
	</data>
	<data name="defeat_noFood" xml:space="preserve">
		<value>Winter on the house run out of food. The Vikings began to die from hunger.</value>
	</data>
	<data name="defeat_noSheep" xml:space="preserve">
		<value>Hay ended. Sheep died of starvation. Without wool for trade, the village is doomed.</value>
	</data>
	<data name="defeat_restart" xml:space="preserve">
		<value>Restart Game</value>
	</data>
	<data name="defeat_result" xml:space="preserve">
		<value>Your score: {0} Felted Wool</value>
	</data>
	<data name="defeat_vote" xml:space="preserve">
		<value>Comment in Store!</value>
	</data>
	<data name="intro_author" xml:space="preserve">
		<value>design by BloodJohn, art by Mebemory</value>
	</data>
	<data name="intro_description" xml:space="preserve">
		<value>You're the head of the Viking village. 
Catch fish to feed people. Mow hay to feed sheep in winter. Kill a few sheep if there is not enough hay or fish. Sheep provide wool, which need for cloth. 
Shear more wool!
</value>
	</data>
	<data name="intro_description2" xml:space="preserve">
		<value>870. The Saga of the People of the Tattúín River Valley, Landnamabok. 
The first settlers, heads came on their own ships, with families, households and slaves.</value>
	</data>
	<data name="intro_title" xml:space="preserve">
		<value>Ancient Iceland: survival economy</value>
	</data>
	<data name="intro_title2" xml:space="preserve">
		<value>Icelandic: Landnámsöld</value>
	</data>
	<data name="spring_description" xml:space="preserve">
		<value>In the spring the sheep go to graze on the meadows. Made in winter fabric will be sold to the merchants in exchange for weapons and tools. Fishing is not always a lot of fish. Mow enough hay for the winter.
</value>
	</data>
	<data name="spring_title" xml:space="preserve">
		<value>Over the winter born lambs</value>
	</data>
	<data name="summer_button" xml:space="preserve">
		<value>IceLand</value>
	</data>
	<data name="summer_fish_spr" xml:space="preserve">
		<value>En/Arrow/S_2</value>
	</data>
	<data name="summer_hay_spr" xml:space="preserve">
		<value>En/Arrow/S_1</value>
	</data>
	<data name="summer_title" xml:space="preserve">
		<value>Summer {0}</value>
	</data>
	<data name="winter_button" xml:space="preserve">
		<value>LongHouse</value>
	</data>
	<data name="winter_ship_spr" xml:space="preserve">
		<value>En/Arrow/W_1</value>
	</data>
	<data name="winter_title" xml:space="preserve">
		<value>{0} Winter {1}</value>
	</data>
	<data name="winter_turn_spr" xml:space="preserve">
		<value>En/Arrow/W_2</value>
	</data>
	<data name="spring_title2" xml:space="preserve">
		<value>Hay Drying in Iceland</value>
	</data>
	<data name="spring_description2" xml:space="preserve">
		<value>The treatment of the hay was a heavy and labour-consuming task. After mowing the windrows had to be tedded, spread and prepared for field-drying.
Because of unreliable weather conditions, the hay had to be protected from dew and rain, leading to rewetting and reduced quality.</value>
	</data>
</root>