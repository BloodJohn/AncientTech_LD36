<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="autumn_description" xml:space="preserve">
		<value>Всю зиму овцы едят сено заготовленное летом. Из шерсти изготавливают сукно. Часть овец забивают на мясо.</value>
	</data>
	<data name="autumn_description2" xml:space="preserve">
		<value>Рыбу потрошат и вывешивают на улице. 
Идеальные условия - чуть выше нуля градусов и мало дождей. При заморозках лед разрывает мясо и рыба портится.</value>
	</data>
	<data name="autumn_description3" xml:space="preserve">
		<value>Узкий дом с единственный комнатой 5 на 15 метров. Каменный фундамент, деревянные балки и стены из дерна в 2 метра толщиной.</value>
	</data>
	<data name="autumn_title" xml:space="preserve">
		<value>Осенью овец собирают и стригут</value>
	</data>
	<data name="autumn_title2" xml:space="preserve">
		<value>Треску сушат на палке</value>
	</data>
	<data name="autumn_title3" xml:space="preserve">
		<value>Длинный дом
</value>
	</data>
	<data name="defeat_noFood" xml:space="preserve">
		<value>Еда закончилась. Люди начали умирать от голода.</value>
	</data>
	<data name="defeat_noSheep" xml:space="preserve">
		<value>Сено кончилось. Овцы погибли от голода. Нет сукна - нечем торговать. Хутор обречен.</value>
	</data>
	<data name="defeat_restart" xml:space="preserve">
		<value>Сыграть снова</value>
	</data>
	<data name="defeat_result" xml:space="preserve">
		<value>Твой результат: {0}шт. сукна.</value>
	</data>
	<data name="defeat_vote" xml:space="preserve">
		<value>Что понравилось в игре?</value>
	</data>
	<data name="intro_author" xml:space="preserve">
		<value>идея BloodJohn, графика Mebemory</value>
	</data>
	<data name="intro_description" xml:space="preserve">
		<value>Ты глава хутора викингов.
Лови рыбу чтобы кормить людей. Коси сено для овец.  Забивай овец если не хватает сена или рыбы. Овцы дают шерсть - для торговли.
Нужно больше сукна!</value>
	</data>
	<data name="intro_description2" xml:space="preserve">
		<value>870 год. Сага о людях из долины Лососьей реки, Книга о взятии земли. 
Первые поселенцы, главы родов приехали на собственных кораблях, с семьями, домочадцами и рабами.</value>
	</data>
	<data name="intro_title" xml:space="preserve">
		<value>Древняя Исландия: Экономика выживания</value>
	</data>
	<data name="intro_title2" xml:space="preserve">
		<value>Исландия: Взятие земли</value>
	</data>
	<data name="merchant_description" xml:space="preserve">
		<value>Корабль торговцев из Норвегии приплывал мимо твоего хутора. Они покупают сукно и продают железные изделия. Сейчас есть {0} сукна для торговли.</value>
	</data>
	<data name="merchant_item200" xml:space="preserve">
		<value>Всего за 200 шт. сукна ты получишь один серп превосходной ковки для срезания травы. 
+1 сено за ход! (жми на картинку, чтобы купить)</value>
	</data>
	<data name="merchant_item500" xml:space="preserve">
		<value>За 500 шт. сукна ты получишь добротные вилы для разбрасывания сена. 
+2 к сену за ход! (до конца этой игры)</value>
	</data>
	<data name="spring_description" xml:space="preserve">
		<value>К весне ягнята подрастают. Ткань продадут купцам в обмен на инструмент и оружие. Не всегда в море есть рыба. Заготовь сена на зиму.</value>
	</data>
	<data name="spring_description2" xml:space="preserve">
		<value>Скошенное сено может сгнить от сильных дождей. Придется начинать косить заново.
В лугах стога стоят недолго. Сено укрывают, с помощью шкур и сукна.</value>
	</data>
	<data name="spring_description3" xml:space="preserve">
		<value>Лодки обрабатывают тюленьим жиром, чтобы дерево не съели морские черви.
В Исландии нет своего строевого леса для киля и мачты.</value>
	</data>
	<data name="spring_title" xml:space="preserve">
		<value>Зимой родились ягнята</value>
	</data>
	<data name="spring_title2" xml:space="preserve">
		<value>Каково лето, таково и сено</value>
	</data>
	<data name="spring_title3" xml:space="preserve">
		<value>Ворвань (seltjara)</value>
	</data>
	<data name="summer_button" xml:space="preserve">
		<value>Исландия</value>
	</data>
	<data name="summer_fish_spr" xml:space="preserve">
		<value>Ru/Arrow/S_2</value>
	</data>
	<data name="summer_hay_spr" xml:space="preserve">
		<value>Ru/Arrow/S_1</value>
	</data>
	<data name="summer_title" xml:space="preserve">
		<value>Лето {0}</value>
	</data>
	<data name="winter_button" xml:space="preserve">
		<value>Длинный Дом</value>
	</data>
	<data name="winter_ship_spr" xml:space="preserve">
		<value>Ru/Arrow/W_1</value>
	</data>
	<data name="winter_title" xml:space="preserve">
		<value>{0} Зима {1}</value>
	</data>
	<data name="winter_turn_spr" xml:space="preserve">
		<value>Ru/Arrow/W_2</value>
	</data>
</root>